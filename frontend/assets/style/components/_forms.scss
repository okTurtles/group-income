$inputHeight: 43px;

form {
  width: 100%;
}

@mixin placeholder {
  $placeholders: ":-moz" ":-webkit-input" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

legend.legend {
  font-weight: 600;
  margin-bottom: $spacer-sm;
}

.field {
  position: relative;
  display: block;
  max-width: 100%;
  width: 100%;
  margin-bottom: $spacer*1.5;

  &:last-of-type {
    margin-bottom: 0;
  }

  .helper {
    display: block;
    color: $text_1;
    margin-top: $spacer-sm;
  }
}

// [1] - make the border-corner around totally visisble at combo elements

textarea,
.textarea,
select,
.select,
.input {
  background: $background_0; // [1]
  display: flex;
  justify-content: center;
  height: $inputHeight;
  width: 100%;
  border-radius: $radius;
  padding: 0 10px;
  background-color: #fff;
  border: 1px solid $general_0;
  letter-spacing: -0.6px;
  font-size: 1rem;
  line-height: 23px;
  outline: none;
  font-family: inherit;
  color: $text_0;

  @mixin placeholder {
    color: $text_1;
  }

  @media (hover: hover) {
    &:focus,
    &:hover {
      border-color: $primary_0;
    }

    &:focus {
      box-shadow: 0 0 0 2px $primary_1;
    }
  }

  &.error {
    border-color: $danger_0;
    color: initial;

    @media (hover: hover) {
      &:focus {
        box-shadow: 0 0 0 2px $danger_1;
      }
    }
  }
}

textarea,
.textarea {
  padding-top: 10px;
  padding-bottom: 10px;
  height: auto;
  min-height: 7.5rem;
  resize: vertical;
}

.label {
  display: block;
  font-weight: bold;
  line-height: 24px;
  margin-bottom: $spacer-sm;
}

.select-wrapper {
  .select,
  select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: transparent;
    padding-right: $spacer-lg;
    padding-left: $spacer;
    min-width: 6.5rem;
    cursor: pointer;

    option:disabled {
      color: $text_1;
    }
  }

  &::after {
    content: "\f0dd"; // icon-sort-down
    text-rendering: auto;
    line-height: 1;
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
    -moz-osx-font-smoothing: grayscale;
    position: absolute;
    top: 50%;
    right: $spacer;
    transform: translateY(calc(-50% - 2px));
    pointer-events: none;
  }

  &.is-reversed::after {
    right: auto;
    left: 5rem;
  }
}

.select-wrapper,
.input-combo {
  position: relative;
  display: flex;
  align-items: stretch;
  border: 1px solid $general_0;
  border-radius: $radius;

  select,
  .select,
  .input {
    position: relative;
    border: 1px solid transparent;

    &:hover {
      border-color: $primary_0;
      z-index: 1; /* all the border gets visible even if next to another input */
    }

    &:focus {
      box-shadow: 0 0 0 2px $primary_1;
    }
  }

  .input {
    border-radius: $radius 0 0 $radius;
  }

  input + select {
    width: auto;
    border-left: 1px solid $general_0;
    border-radius: 0 $radius $radius 0;
    margin-left: -1px /* border */
  }

  &.is-reversed {
    .select {
      border-radius: $radius 0 0 $radius;
    }

    .input {
      border-radius: 0 $radius $radius 0;
      margin-left: -1px; /* show border */
      border-left: 1px solid $general_0;

      &:hover {
        border-color: $primary_0;
      }
    }
  }

  button:not(.is-icon-small) {
    border-radius: 0 $radius $radius 0;

    &.is-icon {
      &:hover,
      &:focus {
        color: $primary_0;
        background-color: transparent;
      }

      &:focus {
        box-shadow: 0 0 0 2px $primary_1;
        border-color: $primary_0;
      }
    }
  }

  .is-icon:not(.is-shifted) {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2;
    min-width: 40px;
    height: $inputHeight;
    text-align: center;
    color: $general_0;
    align-items: center;
    justify-content: center;
    display: flex;

    &:first-child {
      position: absolute;
    }

    + .input {
      padding-left: 40px;
      border-radius: $radius;
    }
  }

  &.error {
    border-color: $danger_0;

    @media (hover: hover) {
      input:focus {
        box-shadow: 0 0 0 2px $danger_1;
        border-color: $danger_0;
      }
    }
  }
}

.input-combo {
  .input {
    border-radius: $radius;
    padding-right: 5rem; /* avg of suffix width */
  }

  .suffix {
    position: absolute;
    top: 0;
    right: 0;
    padding: 0 1rem;
    font-weight: normal;
    font-size: 1rem;
    align-self: center;
    height: $inputHeight;
    line-height: $inputHeight;
    white-space: nowrap;
    color: $text_1;
    z-index: 1 /* to be above input, always */
  }
}

.input-shifted {
  position: relative;
  display: flex;
  align-items: center;

  button {
    margin-left: $spacer-sm;

    @include tablet {
      margin-right: -3rem;
    }
  }
}

span.error,
p.error {
  display: block;
  margin-top: $spacer-sm;
  margin-bottom: 0;
  color: var(--danger_0);

  &::before {
    content: "\f057";
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
    margin-right: $spacer-xs;
  }

  & + .helper {
    // When the error and a helper are visisble at the same time
    margin-top: $spacer-sm;
  }
}

.radio,
.checkbox {
  position: relative;
  display: inline-block;
  cursor: pointer;
  margin-right: 1.5rem;

  .input {
    position: absolute;
    opacity: 0;
    width: 14px;
    height: 14px;
    transform: translateY(4px);
  }

  .input:disabled + :last-child {
    color: $text_1;
    cursor: default;
  }

  .input:not(:disabled):hover + :last-child {
    &::before {
      border-color: $primary_0;
    }
  }

  .input:not(:disabled):focus + :last-child {
    &::before {
      border-color: $primary_0;
      box-shadow: 0 0 0 2px $primary_1;
    }
  }

  .is-column & {
    display: block;

    + .radio,
    + .checkbox {
      margin-top: $spacer;
    }
  }
}

.radio {
  :last-child {
    white-space: nowrap;

    &::before,
    &::after {
      content: "";
      display: inline-block;
      border-radius: 50%;
    }

    &::before {
      width: 14px;
      height: 14px;
      margin-right: $spacer-sm;
      border: 1px solid $general_0;
      transform: translateY(2px);
      transition: box-shadow 150ms, background-color 150ms;
    }

    &::after {
      position: absolute;
      width: 6px;
      height: 6px;
      background-color: $background_0;
      top: 11px;
      left: 7px;
      transform: translate(-50%, -50%) scale(0);
      transition: transform 150ms;
    }
  }

  .input:checked + :last-child {
    &::before {
      border-color: $primary_0;
      background-color: $primary_0;
    }

    &::after {
      transform: translate(-50%, -50%) scale(1);
    }
  }
}

.checkbox {
  :last-child {
    white-space: nowrap;

    &::before,
    &::after {
      display: inline-block;
      border-radius: 2px;
    }

    &::before {
      content: "";
      width: 14px;
      height: 14px;
      margin-right: $spacer-sm;
      border: 1px solid $general_0;
      transform: translateY(2px);
      transition: box-shadow 150ms, background-color 150ms;
    }

    &::after {
      content: "\f00c"; // icon-check
      text-rendering: auto;
      line-height: 1;
      font-family: "Font Awesome 5 Free";
      font-weight: 900;
      -moz-osx-font-smoothing: grayscale;
      font-size: 10px;
      position: absolute;
      width: 6px;
      height: 6px;
      top: 9px;
      left: 5px;
      color: $background_0;
      transform: translate(-50%, -50%) scale(0);
      transition: transform 150ms;
    }
  }

  .input:checked + :last-child {
    &::before {
      border-color: $primary_0;
      background-color: $primary_0;
    }

    &::after {
      transform: translate(-50%, -50%) scale(1);
    }
  }
}

/* The toggle container */
.switch {
  width: 3rem;
  height: 1.6875rem;
  border-radius: 1.6875rem;
  border: 1px solid transparent;
  position: relative;
  background: $general_0;
  cursor: pointer;
  outline: none;
  transition: background-color 0.25s cubic-bezier(0.165, 0.84, 0.44, 1);
  -webkit-appearance: none;
  -moz-appearance: none;

  @media (hover: hover) {
    &:checked:hover,
    &:hover {
      border-color: $text_1;
      background: $text_1;

      &::after {
        background: $white;
      }
    }

    &:focus {
      box-shadow: 0 0 0 2px $primary_1;
    }
  }

  /* The toggle knob */
  &::after {
    content: "";
    border-radius: 50%;
    width: 1.1875rem;
    height: 1.1875rem;
    position: absolute;
    left: $spacer-xs;
    top: 0.2rem;
    background: $white;
    transition: transform 0.25s cubic-bezier(0.165, 0.84, 0.44, 1);
  }

  &:checked {
    background: $primary_0;

    &::after {
      transform: translateX(1.1875rem);
    }
  }

  &:disabled:not(:checked)::after {
    opacity: 0.6;
  }
}

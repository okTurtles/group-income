@mixin buttonState($color, $color_2) {
  @media (hover: hover) {
    &:hover {
      background-color: #{$color};
    }

    &:focus {
      box-shadow: 0 0 0 2px #{$color_2};
    }
  }
}

@mixin outlinedButtonState($color, $color_2) {
  &[data-loading="true"] {
    color: transparent;

    &::after {
      color: $color;
    }
  }

  @media (hover: hover) {
    &:focus,
    &:hover {
      background-color: $background;
      border-color: $color;
      color: $color;
    }

    &:focus {
      box-shadow: 0 0 0 2px #{$color_2};
    }
  }
}

button,
.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  cursor: pointer;
  @extend %unselectable;
  height: auto; // Usability purposes
  min-height: 2.75rem; // A11Y purposes
  border-radius: 2.75rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  border-color: transparent;
  background-color: $primary_0;
  border-width: 1px;
  border-style: solid;
  color: $background_0;
  transition: box-shadow 150ms ease-in;
  white-space: nowrap;
  font-family: "Poppins";
  font-size: $size_4;
  outline: none;

  @include buttonState($primary_0_1, $primary_1);

  &.is-success {
    background-color: $success_0;

    @include buttonState($success_0_1, $success_1);
  }

  &.is-danger,
  &.error {
    background-color: $danger_0;

    @include buttonState($danger_0_1, $danger_1);
  }

  &.is-small {
    min-height: 1.688rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 0;
    line-height: 1em;
  }

  &.is-icon,
  &.is-icon-small,
  &.is-icon-smaller {
    background-color: transparent;
    padding: 0;
    min-height: auto;
    display: flex;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    color: $text_0;
    border-radius: 50%;

    @media (hover: hover) {
      &:hover,
      &:focus {
        color: $text_0;
        background-color: $general_1;
        box-shadow: none; // override @mixin buttonState
      }

      &:focus {
        box-shadow: 0 0 0 2px #{$primary_1};
      }
    }

    &.has-background {
      background-color: $general_2;
      @include buttonState($general_1, $general_1);
    }

    &.has-background-inverted {
      background-color: $white;
      @include buttonState($general_1, $general_1);
    }

    &.is-primary {
      background-color: $primary_0;
      color: $white;
      @include buttonState($primary_0_1, $primary_1);
    }
  }

  &.is-icon {
    width: 2.75rem;
    height: 2.75rem;
  }

  &.is-icon-small {
    width: 1.6875rem;
    height: 1.6875rem;
  }

  &.is-icon-smaller {
    display: inline-flex;
    width: 1rem;
    height: 1rem;
    line-height: 1rem;
    font-size: 0.6rem;
    transform: translateY(-1px);
  }

  &.is-outlined {
    background-color: $background;
    border-color: $general_0;
    color: $text_0;
    @include outlinedButtonState($primary_0_1, $primary_1);

    &.is-success {
      border-color: $success_0;
      color: $success_0;
      @include outlinedButtonState($success_0_1, $success_1);
    }

    &.is-danger,
    &.error {
      border-color: $danger_0;
      color: $danger_0;
      @include outlinedButtonState($danger_0_1, $danger_1);
    }
  }

  &[disabled]:not([data-loading="true"]) {
    background-color: $general_0;
    color: $text_1;
    opacity: 0.5;
    cursor: not-allowed;

    @include buttonState($general_0, $text_1);
  }

  &.is-loader {
    transition: color 150ms;

    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      pointer-events: none;
      width: 1.125rem;
      height: 1.125rem;
      border: 2px solid;
      border-top-color: transparent;
      border-radius: 50%;
      color: $background_0;
      opacity: 0;
      transition: opacity 150ms;
    }

    &.is-small::after {
      width: 1em;
      height: 1em;
    }

    &[data-loading="true"] {
      pointer-events: none; /* prevent click and :hover */
      color: transparent;
      // Delay the spin for 500ms, in case load is ultra fast.
      // That way the user won't even see the loading
      transition: color 400ms 500ms;

      &::after {
        opacity: 1;
        transition: opacity 400ms 500ms;
        animation: loadSpin 1.75s infinite linear;
      }
    }
  }
}

@keyframes loadSpin {
  0% { transform: translate(-50%, -50%) rotate(0deg); }
  100% { transform: translate(-50%, -50%) rotate(360deg); }
}

.buttons {
  position: relative;
  margin-top: $spacer*1.5;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  &.is-centered {
    justify-content: center;
  }

  &.is-start {
    justify-content: flex-start;
  }

  button,
  .button {
    &:not(:last-child) {
      margin-right: $spacer-sm;
    }
  }
}

p + button,
p + .button {
  margin-top: 1.5rem;
}

button.link {
  @extend %reset-button;
  border-bottom: 1px solid $primary_1;
  color: $primary_0;
  font-weight: 600;
  display: inline; // so border breaks correctly on multiple lines.
  line-height: 1.4; // better underline visually

  &::after {
    width: 100%;
  }

  @media (hover: hover) {
    &:hover {
      background-color: transparent;
    }

    &:focus {
      box-shadow: none;
    }
  }
}

@mixin focusState($color) {
  @media (hover: hover) {
    &:focus {
      box-shadow: 0 0 0 1px $background, 0 0 1px 2px $color;
    }
  }
}

button,
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  cursor: pointer;
  @extend %unselectable;
  height: auto; // Usability purposes
  min-height: 2.5rem; // A11Y purposes
  white-space: nowrap;
  color: #fff;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  border-radius: $radius;
  border-color: transparent;
  border-width: 1px;
  background-color: $primary_0;
  transition: filter 100ms ease-out, box-shadow 150ms ease-in;
  font-weight: 600; // A11Y purposes
  font-size: 1rem;
  outline: none;

  &:focus,
  &:hover {
    filter: contrast(1.2);
  }

  @include focusState($primary_0);

  &.is-success {
    background-color: $success_0;

    @include focusState($success_0);
  }

  &.is-danger,
  &.error {
    background-color: $danger_0;

    @include focusState($danger_0);
  }

  [class^="icon-"] + span {
    margin-left: 1rem;
  }

  span + [class^="icon-"] {
    margin-left: 6px;
  }

  &.is-small {
    min-height: 1.6875rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 0;
    font-size: 12px;
    line-height: 12px;

    [class^="icon-"] {
      margin-right: $spacer-sm;
    }
  }

  &.is-icon {
    background-color: transparent;
    padding: 0;
    min-height: auto;
    width: $spacer-lg;
    height: $spacer-lg;
    display: flex;
    justify-content: center;
    align-items: center;
    color: $text_1;

    [class^="icon-"]:last-child {
      margin-left: 0;
    }

    &:hover,
    &:focus {
      color: $text_0;
      box-shadow: none; // override @mixin focusState
    }
  }

  &.is-outlined {
    background-color: transparent;
    border-color: $general_0;
    color: $text_1;

    @include focusState($general_0);

    &.is-success {
      border-color: $success_0;
      color: $success_0;

      @include focusState($success_0);
    }

    &.is-danger,
    &.error {
      border-color: $danger_0;
      color: $danger_0;

      @include focusState($danger_0);
    }
  }

  &[disabled] {
    background-color: $general_0;
    color: $text_1;
    opacity: 0.5;

    &:hover {
      filter: none;
    }
  }
}

.buttons {
  padding-top: 1.5rem;
  display: flex;
  justify-content: space-between;

  &.is-centered {
    justify-content: center;
  }
}

button.link {
  @extend %reset-button;
  color: $primary_0;

  &::after {
    width: 100%;
  }
}
